plugins {
    id 'com.gtnewhorizons.retrofuturagradle' version '1.4.0'
    id 'com.palantir.git-version' version '3.3.0'
}

version = gitVersion()
group = "com.koyomiji.robustboats" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "robustboats"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

minecraft {
    mcVersion = "1.7.10"
    username = System.getProperty("user.name")
    injectedTags.put("MODID", archivesBaseName)
    injectedTags.put("VERSION", project.version)
}

tasks.injectTags.configure {
    outputClassName.set("${project.group}.Tags")
}

sourceSets {
    main {
        java {
            srcDirs += 'src/main/java'
            srcDirs += 'external/asmine/src/main/java'
        }
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
        {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE

            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

jar {
    manifest {
        attributes "FMLCorePlugin": "com.koyomiji.robustboats.coremod.RobustBoatsCorePlugin"
        attributes "FMLCorePluginContainsFMLMod": "true"
    }
}